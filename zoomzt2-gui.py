#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.4 on Wed May 18 04:37:47 2022
#

import wx
import zoomzt2
import os
from argparse import ArgumentParser

global options

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class _479389042__675845753_MyFrame(wx.Frame):
    effect = None
    effects = []
    files = []
    pedal = None

    def __init__(self, *args, **kwds):
        # begin wxGlade: _479389042__675845753_MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 300))
        self.SetTitle("Zoom-ZT2")

        sizer_2 = wx.BoxSizer(wx.VERTICAL)

        self.notebook_1 = wx.Notebook(self, wx.ID_ANY)
        sizer_2.Add(self.notebook_1, 1, wx.EXPAND, 0)

        self.notebook_1_pane_1 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.notebook_1.AddPage(self.notebook_1_pane_1, "New")

        sizer_4 = wx.BoxSizer(wx.VERTICAL)

        self.button_6 = wx.Button(self.notebook_1_pane_1, wx.ID_ANY, "Select Effect")
        sizer_4.Add(self.button_6, 0, wx.EXPAND, 0)

        label_2 = wx.StaticText(self.notebook_1_pane_1, wx.ID_ANY, "Info", style=wx.ALIGN_CENTER_HORIZONTAL)
        label_2.SetMinSize((398, -1))
        sizer_4.Add(label_2, 0, wx.ALL, 0)

        self.text_ctrl_1 = wx.TextCtrl(self.notebook_1_pane_1, wx.ID_ANY, "<No Effect Selected>", style=wx.TE_MULTILINE)
        self.text_ctrl_1.SetMinSize((-1, 300))
        sizer_4.Add(self.text_ctrl_1, 0, wx.EXPAND, 0)

        self.notebook_1_tab2 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.notebook_1.AddPage(self.notebook_1_tab2, "Effects")

        sizer_5 = wx.BoxSizer(wx.VERTICAL)

        self.list_box_1 = wx.ListBox(self.notebook_1_tab2, wx.ID_ANY, choices=["<Connect to list effects>"], style=wx.LB_HSCROLL | wx.LB_SINGLE)
        self.list_box_1.SetMinSize((398, 300))
        sizer_5.Add(self.list_box_1, 0, wx.ALL | wx.EXPAND, 0)

        self.notebook_1_tab3 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.notebook_1.AddPage(self.notebook_1_tab3, "Files")

        sizer_6 = wx.BoxSizer(wx.VERTICAL)

        self.list_box_2 = wx.ListBox(self.notebook_1_tab3, wx.ID_ANY, choices=["<Connect to list files>"])
        self.list_box_2.SetMinSize((398, 300))
        sizer_6.Add(self.list_box_2, 0, wx.EXPAND, 0)

        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(sizer_3, 0, wx.EXPAND, 0)

        self.button_1 = wx.Button(self, wx.ID_ANY, "Disconnect")
        sizer_3.Add(self.button_1, 1, 0, 0)

        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        sizer_3.Add(self.panel_1, 1, 0, 0)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        self.button_2 = wx.Button(self.panel_1, wx.ID_ANY, "Connect")
        sizer_1.Add(self.button_2, 1, wx.EXPAND, 0)

        self.button_3 = wx.Button(self.panel_1, wx.ID_ANY, "Install")
        self.button_3.Hide()
        sizer_1.Add(self.button_3, 1, wx.EXPAND, 0)

        self.button_4 = wx.Button(self.panel_1, wx.ID_ANY, "Remove")
        self.button_4.Hide()
        sizer_1.Add(self.button_4, 1, wx.EXPAND, 0)

        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_7, 1, wx.EXPAND, 0)

        self.button_7 = wx.Button(self.panel_1, wx.ID_ANY, "Delete")
        self.button_7.Hide()
        sizer_7.Add(self.button_7, 1, wx.EXPAND, 0)

        self.button_5 = wx.Button(self.panel_1, wx.ID_ANY, "Download")
        self.button_5.Hide()
        sizer_7.Add(self.button_5, 1, wx.EXPAND, 0)

        self.panel_1.SetSizer(sizer_1)

        self.notebook_1_tab3.SetSizer(sizer_6)

        self.notebook_1_tab2.SetSizer(sizer_5)

        self.notebook_1_pane_1.SetSizer(sizer_4)

        self.SetSizer(sizer_2)

        self.Layout()

        self.Bind(wx.EVT_NOTEBOOK_PAGE_CHANGED, self.PageChange, self.notebook_1)
        self.Bind(wx.EVT_BUTTON, self.butSelect, self.button_6)
        self.Bind(wx.EVT_BUTTON, self.butQuit, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.butConnect, self.button_2)
        self.Bind(wx.EVT_BUTTON, self.butInstall, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.butRemove, self.button_4)
        self.Bind(wx.EVT_BUTTON, self.butDelete, self.button_7)
        self.Bind(wx.EVT_BUTTON, self.butDownload, self.button_5)
        # end wxGlade

        self.pedal = zoomzt2.zoomzt2()
        if self.ConnectPedal():
            self.UpdateButtons()

    def PageChange(self, event):  # wxGlade: _479389042__675845753_MyFrame.<event_handler>
        self.UpdateButtons()
        event.Skip()

    def butSelect(self, event):  # wxGlade: _479389042__675845753_MyFrame.<event_handler>
        dlg = wx.FileDialog(self, "Select Effect", wildcard="Effects (*.zd2,*.ZD2)|*.zd2;*.ZD2",
                       style=wx.FD_OPEN | wx.FD_FILE_MUST_EXIST)

        if dlg.ShowModal() == wx.ID_CANCEL:
            event.Skip()
            return
        self.effect = dlg.GetPath()
        dlg.Destroy()

        binfile = open(self.effect, "rb")
        if binfile:
            bindata = binfile.read()
            binfile.close()

            config = zoomzt2.ZD2.parse(bindata)
            head, tail = os.path.split(self.effect)
            self.text_ctrl_1.SetValue(tail + " = " + config['name'])
            self.text_ctrl_1.AppendText("\nVer  : " + config['version'])
            self.text_ctrl_1.AppendText("\nGroup: " + str(config['group']) + " (" \
                    + config['groupname'] + ")")
            self.text_ctrl_1.AppendText("\nID   : " + hex(config['id']))
            self.text_ctrl_1.AppendText("\n\n" + config['TXE1']['description'])

            self.button_6.SetLabel(tail)
            self.button_3.Enable()

        event.Skip()

    def butQuit(self, event):  # wxGlade: _479389042__675845753_MyFrame.<event_handler>
        if self.pedal.is_connected():
            self.DisconnectPedal()
        event.Skip()

    def butConnect(self, event):  # wxGlade: _479389042__675845753_MyFrame.<event_handler>
        self.ConnectPedal()
        event.Skip()

    def butInstall(self, event):  # wxGlade: _479389042__675845753_MyFrame.<event_handler>
        if self.effect == None:
            event.Skip()
            return

        self.pedal.file_check("FLST_SEQ.ZT2")
        data = self.pedal.file_download("FLST_SEQ.ZT2")

        binfile = open(self.effect, "rb")
        if binfile:
            bindata = binfile.read()
            binfile.close()

            binconfig = zoomzt2.ZD2.parse(bindata)

            self.pedal.file_check(self.effect)
            self.pedal.file_upload(self.effect, bindata)
            self.pedal.file_close()

            data = self.pedal.add_effect_from_filename(data, self.effect)

            self.pedal.file_check("FLST_SEQ.ZT2")
            self.pedal.file_upload("FLST_SEQ.ZT2", data)
            self.pedal.file_close()

            self.text_ctrl_1.AppendText("\n\nEffect installed!")
            self.button_3.Disable()
            self.ReadEffects()
            self.ReadFiles()

        event.Skip()

    def butRemove(self, event):  # wxGlade: _479389042__675845753_MyFrame.<event_handler>
        index = self.list_box_1.GetSelection()
        name = self.list_box_1.GetString(index)
        if name :
            self.pedal.file_check(name)
            self.pedal.file_delete(name)

            self.pedal.file_check("FLST_SEQ.ZT2")
            data = self.pedal.file_download("FLST_SEQ.ZT2")

            data = self.pedal.remove_effect(data, name)

            self.pedal.file_check("FLST_SEQ.ZT2")
            self.pedal.file_upload("FLST_SEQ.ZT2", data)
            self.pedal.file_close()

            self.ReadEffects()
            self.ReadFiles()

        if index >= self.list_box_1.Count:
            index -= 1
        self.list_box_1.SetSelection(index)

        event.Skip()

    def butDelete(self, event):  # wxGlade: _479389042__675845753_MyFrame.<event_handler>
        name = self.list_box_2.GetString(self.list_box_2.GetSelection())
        if name :
            self.pedal.file_check(name)
            self.pedal.file_delete(name)
            self.pedal.file_close()

            self.ReadFiles()

        event.Skip()

    def butDownload(self, event):  # wxGlade: _479389042__675845753_MyFrame.<event_handler>
        name = self.list_box_2.GetString(self.list_box_2.GetSelection())
        if name :
            self.pedal.file_check(name)
            data = self.pedal.file_download(name)
            self.pedal.file_close()

            if data:
                outfile = open(name, "wb")
                if not outfile:
                    sys.exit("Unable to open FILE for writing")
                outfile.write(data)
                outfile.close()

        event.Skip()

    def UpdateButtons(self):
        self.button_3.Hide()
        self.button_4.Hide()
        self.button_7.Hide()
        self.button_5.Hide()

        if self.pedal.is_connected():
            self.button_2.Hide()
        else:
            self.button_2.Show()
            self.Layout()
            return

        page = self.notebook_1.GetSelection()
        if page == 0:
            self.button_3.Show()
        if page == 1:
            self.button_4.Show()
        if page == 2:
            if options.delete:
                self.button_7.Show()
            self.button_5.Show()
        self.Layout()

    def ConnectPedal(self):
        if self.pedal.connect(options.midiskip):
            self.pedal.pcmode_on()
            self.ReadEffects()
            self.ReadFiles()
            self.UpdateButtons()
            return True
        return False

    def DisconnectPedal(self):
        self.pedal.disconnect()
        self.UpdateButtons()

    def ReadEffects(self):
        self.pedal.file_check("FLST_SEQ.ZT2")
        data = self.pedal.file_download("FLST_SEQ.ZT2")
        self.pedal.file_close()

        if not data:
            return False

        config = zoomzt2.ZT2.parse(data)
        self.effects.clear()
        for group in config[1]:
            for effect in dict(group)["effects"]:
                if effect['installed']:
                    self.effects.append(dict(effect)["effect"])

        self.list_box_1.Set(self.effects)

    def ReadFiles(self):
        name = self.pedal.file_wild(True)
        if name:
            self.files.clear()
        while name:
            self.files.append(name)
            name = self.pedal.file_wild(False)
        self.pedal.file_close()

        self.list_box_2.Set(self.files)

# end of class _479389042__675845753_MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = _479389042__675845753_MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    parser = ArgumentParser(prog="zoomzt2-gui")

    parser.add_argument("-D", "--delete",
        help="enable button to delete files from device (use with care)",
        action="store_true", dest="delete")
    parser.add_argument("-M", "--midiskip",
        help="Skip devices when connecting, ie when you multiple pedals",
        type=int, default=0, dest="midiskip")

    options = parser.parse_args()

    App = MyApp(0)
    App.MainLoop()
